// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nexus.ProjectAPI.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Nexus.ProjectAPI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230630180409_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nexus.ProjectAPI.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Portfolio Website",
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nexus Solution",
                            Priority = 3
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nexus Libraries",
                            Priority = 3
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nexus Tool",
                            Priority = 3
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nexus Template",
                            Priority = 2
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Presentation",
                            Priority = 4
                        });
                });

            modelBuilder.Entity("Nexus.ProjectAPI.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedToId")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("TodoItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create a portfolio website using react",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            Title = "Create React Site"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Deploy portfolio site to Netlify",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            Title = "Deploy site"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Api Gateway",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            Title = "Api Gateway"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Health Check Dashboard",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            Title = "HC Dashboard"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Setup Discovery Server",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            Title = "Discovery Server"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Company API",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            Title = "Company API"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Project API",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            Title = "Project API"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Auth",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Auth"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Common",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Common"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Configuration",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Configuration"
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Framework.Web",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Framework.Web"
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Logs",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Logs"
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Management",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Management"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Persistence",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Persistence"
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus.Telemetry",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            Title = "Telemetry"
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus CLI Tool",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 4,
                            Title = "Create Tool"
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Test CLI Tool",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 4,
                            Title = "Testing"
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Nexus CLI Tool",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 5,
                            Title = "Create Template"
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create Presentation for Nexus",
                            IsCompleted = true,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 6,
                            Title = "Create Presentation"
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Present in front of audience",
                            IsCompleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 6,
                            Title = "Present"
                        });
                });

            modelBuilder.Entity("Nexus.ProjectAPI.Entities.TodoItem", b =>
                {
                    b.HasOne("Nexus.ProjectAPI.Entities.Project", null)
                        .WithMany("TodoItems")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nexus.ProjectAPI.Entities.Project", b =>
                {
                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
